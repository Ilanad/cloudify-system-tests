
variable "resource_suffix" {}
variable "public_key_path" {}
variable "private_key_path" {}
variable "flavor" {}

output "router_name" { value = "${openstack_networking_router_v2.router1.name}" }
output "router_id" { value = "${openstack_networking_router_v2.router1.id}" }
output "network_name" { value = "${openstack_networking_network_v2.network1.name}" }
output "network_id" { value = "${openstack_networking_network_v2.network1.id}" }
output "subnet_name" { value = "${openstack_networking_subnet_v2.subnet1.name}" }
output "subnet_id" { value = "${openstack_networking_subnet_v2.subnet1.id}" }
output "security_group_name" { value = "${openstack_compute_secgroup_v2.security_group.name}" }
output "security_group_id" { value = "${openstack_compute_secgroup_v2.security_group.id}" }
output "keypair_name" { value = "${openstack_compute_keypair_v2.keypair.name}" }
{% for server in servers %}
output "public_ip_address_{{ loop.index0 }}" { value = "${openstack_networking_floatingip_v2.floatingip{{ loop.index0 }}.address}" }
output "private_ip_address_{{ loop.index0 }}" { value = "${openstack_compute_instance_v2.server{{ loop.index0 }}.network.0.fixed_ip_v4}" }
output "server_name_{{ loop.index0 }}" { value = "${openstack_compute_instance_v2.server{{ loop.index0 }}.name}" }
output "server_id_{{ loop.index0 }}" { value = "${openstack_compute_instance_v2.server{{ loop.index0 }}.id}" }
{% endfor %}


resource "openstack_networking_router_v2" "router1" {
  name = "router1-${var.resource_suffix}"
  external_gateway = "dda079ce-12cf-4309-879a-8e67aec94de4"
}

resource "openstack_networking_router_v2" "router2" {
  name = "router2-${var.resource_suffix}"
  external_gateway = "dda079ce-12cf-4309-879a-8e67aec94de4"
}


resource "openstack_networking_network_v2" "network1" {
  name = "network1-${var.resource_suffix}"
}

resource "openstack_networking_network_v2" "network2" {
  name = "network2-${var.resource_suffix}"
}

resource "openstack_networking_subnet_v2" "subnet1" {
  name = "subnet1-${var.resource_suffix}"
  network_id = "${openstack_networking_network_v2.network1.id}"
  cidr = "10.0.0.0/24"
  dns_nameservers = ["8.8.8.8", "8.8.4.4"]
}


resource "openstack_networking_subnet_v2" "subnet2" {
  name = "subnet2-${var.resource_suffix}"
  network_id = "${openstack_networking_network_v2.network2.id}"
  cidr = "11.0.0.0/24"
  dns_nameservers = ["8.8.8.8", "8.8.4.4"]
}

resource "openstack_networking_router_interface_v2" "router_interface1" {
  router_id = "${openstack_networking_router_v2.router1.id}"
  subnet_id = "${openstack_networking_subnet_v2.subnet1.id}"
}


resource "openstack_networking_router_interface_v2" "router_interface2" {
  router_id = "${openstack_networking_router_v2.router2.id}"
  subnet_id = "${openstack_networking_subnet_v2.subnet2.id}"
}

resource "openstack_compute_secgroup_v2" "security_group" {
  name = "security_group-${var.resource_suffix}"
  description = "cloudify manager security group"
  rule {
    from_port = 22
    to_port = 22
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 80
    to_port = 80
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 8086
    to_port = 8086
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 8080
    to_port = 8080
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 1 
    to_port = 65535
    ip_protocol = "tcp"
    cidr = "${openstack_networking_subnet_v2.subnet1.cidr}"
  }
  rule {
    from_port = 1 
    to_port = 65535
    ip_protocol = "tcp"
    cidr = "${openstack_networking_subnet_v2.subnet2.cidr}"
  }
  rule {
      from_port = 443
      to_port = 443
      ip_protocol = "tcp"
      cidr = "0.0.0.0/0"
    }
}

resource "openstack_compute_keypair_v2" "keypair" {
  name = "keypair-${var.resource_suffix}"
  public_key = "${file("${var.public_key_path}")}"
}


{% for server in servers %}

resource "openstack_networking_floatingip_v2" "floatingip{{ loop.index0 }}" {
  pool = "GATEWAY_NET"
}

resource "openstack_compute_instance_v2" "server{{ loop.index0 }}" {
  name = "server-{{ loop.index0 }}-${var.resource_suffix}"
  image_name = "{{ server.image_name }}"
  flavor_name = "${var.flavor}"
  key_pair = "${openstack_compute_keypair_v2.keypair.name}"
  security_groups = ["${openstack_compute_secgroup_v2.security_group.name}"]
  network {
    uuid = "${openstack_networking_network_v2.network1.id}"
  }
  network {
    uuid = "${openstack_networking_network_v2.network2.id}"
  }
  floating_ip = "${openstack_networking_floatingip_v2.floatingip{{ loop.index0 }}.address}"

  provisioner "remote-exec" {
    inline = [
      "echo hello world"
    ]
    connection {
      type = "ssh"
      user = "centos"
      private_key = "${file("${var.private_key_path}")}"
      timeout = "10m"
      agent = "false"
    }
  }
}

{% endfor %}
